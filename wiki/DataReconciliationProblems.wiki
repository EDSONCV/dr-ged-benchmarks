#labels DR_Problems
= Data Reconciliation Benchmark Problems =
Data reconciliation are divided in 4 categories, which are the sub folders contained in /trunk/data_reconciliation folder:

    1 data_analysis 

    The aim of this problems is to test data filter (filter on the variables before DR is applied), data filter window selection and influence on the dynamics on the DR results. These problems were built using the xcos (simulink version of scilab, *compatible with scilab version 5.4*). 

Inside the data_analysis folder, we find an example called 2_tanks. The problem is a 2 tanks in parallel with measured (or unmeasured) total flows. Each tank has its own dynamic behaviour and a bypass valve to close the tanks feeding. The flowsheet is presented below:   

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2tanks.png

When the dynamic system starts:
 * At time t0 where all flow is by-passed to streams 4 and 7.
 * At time t1, the bypass valve is closed and the inlet valve of tank 1 is opened.
 * At time t2, the valve to tank 1 is closed and inlet valve to tank 2 is opened. 
 * At time t3, the inlet valves of tank 1 and 2 are closed and by-pass valve is opened.
 * Depending on the case, the user can add gross error to the measurement. The time and location can be set by the user.

There are 2 scripts in each folder. The first one is to test the influence of the size of the moving average window filter in the data reconciliation. The second one, uses a default windows size of 30 data points to filter data and perform reconciliation of all measured streams with and without filtering. The results are plotted in several windows (one for each stream).

We have four implementations of this version:

1. The dynamic behaviour is *neglected* and *all streams are measured* (in folder ss_all_measured). The block diagram can be checked below:

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2_tanks_ss_all_measured_block_diagram.png

2. 1. The dynamic behaviour is *neglected* and *some streams are unmeasured* (in folder ss_unmeasured). The block diagram can be checked below:

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2_tanks_ss_all_measured_block_diagram.png

3. The dynamic behaviour is *neglected* and *all streams are measured* but a *gross error is added* at a given time, which can be set-up by user (in folder gross_error). The user can select the time of gross error and the location by turning on-off the respective switch. The block diagram can be checked below:

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2_tanks_ss_all_measured_block_diagram.png

4. The dynamic behaviour *must be considered* and *all streams are measured* (in folder dynamic). The block diagram can be checked below:

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2_tanks_dynamic_block_diagram.png

5. The dynamic behaviour *must be considered* and *all streams are measured* and a *gross error* is added at a given time, which can be setup by user (in folder dynamic_gross_error).  The user can select the time of gross error and the location by turning on-off the respective switch. The block diagram can be checked below:

http://dr-ged-benchmarks.googlecode.com/svn/trunk/data_reconciliation/data_analysis/diagrams/png/2_tanks_dynamic_gross_error_block_diagram.png

File Structure

At the root folder of data_analysis folder we find the following files and folders:

* Files
   * dr_wls_simple.sci: Data reconciliation using weighted least squares (WLS) formulation. 
   * moving.sci: Moving average method for data filtering.

 * Folders
  * ss_all_measured: Steady state with all streams measured.
  * ss_unmeasured: Steady state with some streams measured and some unmeasured.
  * gross_error: Steady state with all streams measured and a gross error (position and time can be chosen).
  * dynamic: Different dynamic behaviour for each tank with all streams measured.
  * dynamic_gross_error: Different dynamic behaviour for each tank with all streams measured and a gross error (position and time can be chosen).

 Files inside each folder

Since the block diagrams were generated with Scilab 5.4 and Xcos (Simulink similar for Scilab), they are not compatible with older Scilab versions, in this case, a ".sav" file is available and can be loaded instead of running Xcos simulation. If you want to load a previously saved simulation data, set _run_new_ flag to 0, in the respective ".sce" script, as in the code below:
{{{
clear xm var jac nc nv i1 i2 nnzeros sparse_dg sparse_dh lower upper var_lin_type constr_lin_type constr_lhs constr_rhs
getd('../');
getd('.');
run_new = 0;
}}}  

 ss_all_measured folder

 * tanks_ss_noerror.sce: script file to open Xcos diagram, simulate, filter, reconcile data and plot results.
 * tanks_tst_window.sce: script to test moving window size. 
 * ss_no_error_mat.sav: saved simulation file, in case the user have problems with Xcos.
 * steady_state_no_ge.zcos: Xcos diagram
 * wls_linear_functions.sce: unused by now (will be used in the future)
 * wls_linear_functions.sci:unused by now (will be used in the future)

 ss_all_measured folder

In this case a simulation with all variables is carried out and a filter is used just like the case before. The difference is that in DR routine, the user can set tu unmeasured streams (in the base case 1, 2, 3 and 4). And a data reconciliation is performed (a little bit slow because we use an optimizer). The files are listed below: 

 * tanks_ss_umeas.sce: script file to open Xcos diagram, simulate, filter, reconcile data and plot results.
 * tanks_tst_window.sce: script to test moving window size. 
 * ss_no_error_mat.sav: saved simulation file, in case the user have problems with Xcos.
 * steady_state_no_ge.zcos: Xcos diagram
 * wls_linear_functions.sce: used by optimizer (weighted least squares formulation)
 * wls_linear_functions.sci:used by optimizer (weighted least squares formulation)
  
  all the other folders have basically the same structure and will not be described.
  
    2 error_in_variables 

    Error in Variables (EVM) is a problem where a DR is carried out together with parameter estimation, the aim of this problem is to test algorithms for this problem class. 

    3 linear 

    Although linear problems are easy to solve in DR, since it have analytical solution, the aim of this problem is to test different objetctive function types, called robust functions. These robust functions can provide results with gross errors removed, however, to do this, some parameters must be tunned in these function. The aim of this class problems is to test these parameters set up. 

    4 non-linear 

    The aim of these problems is to test DR in more complex and non-linear problems. Some features are tested such as:

        How DR behaves with observable non-measured variables.
        How DR behaves with non-observable non-measured variables.
        How DR behaves with models which are approximated by model simplifications. 

 Each folder has 3 sobfolders: 

    * diagrams: a diagram of the process in the .dia and .png format.
    * scilab: the scilab implementation.
    * spreadsheet: a Excel spreadsheet of the data, results or some data handling necessary to run the model. 